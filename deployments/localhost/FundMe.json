{
  "address": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundeMe_NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getVersion",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x00247f732faa4a850a8a54b68178146d638ecde03ebe4436da9c21a30d667f9f",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xe7f1725E7734CE288F8367e1Bb143E90bb3F0512",
    "transactionIndex": 0,
    "gasUsed": "1091497",
    "logsBloom": "0x
    "blockHash": "0x9b6c8911fd7090035f9c9a38e3f93a32d8f8e4ee5a651d9e0d5970edb6cd8097",
    "transactionHash": "0x00247f732faa4a850a8a54b68178146d638ecde03ebe4436da9c21a30d667f9f",
    "logs": [],
    "blockNumber": 2,
    "cumulativeGasUsed": "1091497",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x5FbDB2315678afecb367f032d93F642f64180aa3"
  ],
  "numDeployments": 1,
  "solcInputHash": "72f2d89eb8c95201e34e7f421c9d030b",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundeMe_NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getVersion\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror FundeMe_NotOwner();\\n\\ncontract FundMe {\\n    using PriceConverter for uint256;\\n\\n    mapping(address => uint256) private s_addressToAmountFunded;\\n    address[] private s_funders;\\n     \\n     //s repesentes storage varaible which will cost us lot of gas\\n     //read \\n    // Could we make this constant?  /* hint: no! We should make it immutable! */\\n    address private immutable  i_owner;\\n    uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n    AggregatorV3Interface private s_priceFeed;\\n\\n    constructor(address priceFeedAddress) {\\n        i_owner = msg.sender;\\n        s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n        }\\n\\n    function fund() public payable {\\n\\n        //msg.value = amount of ether sent with function call;(msg is a global variable)\\n        uint256 sentUsd = PriceConverter.getConversionRate(msg.value,s_priceFeed);\\n        require(sentUsd >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        // require(PriceConverter.getConversionRate(msg.value) >= MINIMUM_USD, \\\"You need to spend more ETH!\\\");\\n        s_addressToAmountFunded[msg.sender] += msg.value;\\n        s_funders.push(msg.sender);\\n    }\\n    \\n    function getVersion() public view returns (uint256){\\n        // ETH/USD price feed address of Sepolia Network.\\n        return s_priceFeed.version();\\n    }\\n    \\n    modifier onlyOwner {\\n        // require(msg.sender == owner);\\n        if (msg.sender != i_owner) revert FundeMe_NotOwner();\\n        _;\\n    }\\n    \\n    function withdraw() public onlyOwner {\\n        for (uint256 funderIndex=0; funderIndex < s_funders.length; funderIndex++){\\n            address funder = s_funders[funderIndex];\\n            s_addressToAmountFunded[funder] = 0;\\n        }\\n        s_funders = new address[](0);\\n        // // transfer\\n        // payable(msg.sender).transfer(address(this).balance);\\n        // // send\\n        // bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n        // require(sendSuccess, \\\"Send failed\\\");\\n        // call\\n        (bool callSuccess, ) = payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n        require(callSuccess, \\\"Call failed\\\");\\n    }\\n    // Explainer from: https://solidity-by-example.org/fallback/\\n    // Ether is sent to contract\\n    //      is msg.data empty?\\n    //          /   \\\\ \\n    //         yes  no\\n    //         /     \\\\\\n    //    receive()?  fallback() \\n    //     /   \\\\ \\n    //   yes   no\\n    //  /        \\\\\\n    //receive()  fallback()\\n\\n   /*  fallback() external payable {\\n        fund();\\n    }\\n\\n    receive() external payable {\\n        fund();\\n    } */\\n\\n    function cheaperWithdraw() public onlyOwner{\\n\\n     address[] memory funders = s_funders;\\n\\n     for(uint256 index =0;index<funders.length;index++){\\n\\n         address funder = funders[index];\\n         s_addressToAmountFunded[funder] =0;\\n     }\\n\\n     s_funders = new address[](0);\\n\\n     (bool success,)= i_owner.call{value:address(this).balance}(\\\"\\\");\\n     require(success);\\n    }\\n\\n    function getOwner() public view returns(address){\\n        return i_owner;\\n    }\\n\\n    function getFunder(uint256 index) public view returns(address){\\n           return s_funders[index];\\n    }\\n\\n    function getAddressToAmountFunded(address funder) public view returns(uint256){\\n        return s_addressToAmountFunded[funder];\\n    }\\n\\n    function getPriceFeed() public view returns(AggregatorV3Interface){\\n        return s_priceFeed;\\n    }\\n    \\n\\n}\\n\\n\\n\\n// Concepts we didn't cover yet (will cover in later sections)\\n// 1. Enum\\n// 2. Events\\n// 3. Try / Catch\\n// 4. Function Selector\\n// 5. abi.encode / decode\\n// 6. Hash with keccak256\\n// 7. Yul / Assembly\\n\\n\",\"keccak256\":\"0xb4b39c2b9e7be08b760280a1c4a52ae0c34a9c4e9431126e838ee59174c02425\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.8;\\r\\n\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// Why is this a library and not abstract?\\r\\n// Why not an interface?\\r\\nlibrary PriceConverter {\\r\\n    // We could make this public, but then we'd have to deploy it\\r\\n    function getPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\r\\n        // Sepolia ETH / USD Address\\r\\n        // https://docs.chain.link/data-feeds/price-feeds/addresses#Sepolia%20Testnet\\r\\n        (, int256 answer, , , ) = priceFeed.latestRoundData();\\r\\n        // ETH/USD rate in 18 digit\\r\\n        return uint256(answer * 10000000000);\\r\\n        // or (Both will do the same thing)\\r\\n        // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\r\\n    }\\r\\n\\r\\n    // 1000000000\\r\\n    function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\r\\n        internal\\r\\n        view\\r\\n        returns (uint256)\\r\\n    {\\r\\n        uint256 ethPrice = getPrice(priceFeed);\\r\\n        uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\r\\n        // or (Both will do the same thing)\\r\\n        // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\r\\n        // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\r\\n        return ethAmountInUsd;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xa618d081497c103de75b6d6fc9ffbe1926a637ecf7087ed9c3d33fe4c45051e8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620013e5380380620013e5833981810160405281019062000037919062000120565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1660601b8152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000152565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e882620000bb565b9050919050565b620000fa81620000db565b81146200010657600080fd5b50565b6000815190506200011a81620000ef565b92915050565b600060208284031215620001395762000138620000b6565b5b6000620001498482850162000109565b91505092915050565b60805160601c61125f62000186600039600081816102da01528181610529015281816106b001526108a6015261125f6000f3fe6080604052600436106100865760003560e01c8063893d20e811610059578063893d20e8146101355780639e87a5cd14610160578063b60d42881461018b578063be2693f014610195578063d7b4750c146101ac57610086565b80630343fb251461008b5780630d8e6e2c146100c85780633ccfd60b146100f35780636b69a5921461010a575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610b6a565b6101e9565b6040516100bf9190610bb0565b60405180910390f35b3480156100d457600080fd5b506100dd610231565b6040516100ea9190610bb0565b60405180910390f35b3480156100ff57600080fd5b506101086102d8565b005b34801561011657600080fd5b5061011f610518565b60405161012c9190610bb0565b60405180910390f35b34801561014157600080fd5b5061014a610525565b6040516101579190610bda565b60405180910390f35b34801561016c57600080fd5b5061017561054d565b6040516101829190610c54565b60405180910390f35b610193610577565b005b3480156101a157600080fd5b506101aa6106ae565b005b3480156101b857600080fd5b506101d360048036038101906101ce9190610c9b565b61093c565b6040516101e09190610bda565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561029b57600080fd5b505afa1580156102af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d39190610cdd565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035d576040517fe1bbc6ae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104085760006001828154811061038357610382610d0a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040090610d68565b915050610360565b50600067ffffffffffffffff81111561042457610423610db1565b5b6040519080825280602002602001820160405280156104525781602001602082028036833780820191505090505b5060019080519060200190610468929190610a60565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048f90610e11565b60006040518083038185875af1925050503d80600081146104cc576040519150601f19603f3d011682016040523d82523d6000602084013e6104d1565b606091505b5050905080610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610e83565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006105a534600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610984565b90506802b5e3af16b18800008110156105f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ea90610eef565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106419190610f0f565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610733576040517fe1bbc6ae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107b757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161076d575b5050505050905060005b81518110156108415760008282815181106107df576107de610d0a565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061083990610d68565b9150506107c1565b50600067ffffffffffffffff81111561085d5761085c610db1565b5b60405190808252806020026020018201604052801561088b5781602001602082028036833780820191505090505b50600190805190602001906108a1929190610a60565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108e890610e11565b60006040518083038185875af1925050503d8060008114610925576040519150601f19603f3d011682016040523d82523d6000602084013e61092a565b606091505b505090508061093857600080fd5b5050565b60006001828154811061095257610951610d0a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610990836109c0565b90506000670de0b6b3a764000085836109a99190610f65565b6109b39190610fee565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a0957600080fd5b505afa158015610a1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a419190611097565b5050509150506402540be40081610a589190611112565b915050919050565b828054828255906000526020600020908101928215610ad9579160200282015b82811115610ad85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a80565b5b509050610ae69190610aea565b5090565b5b80821115610b03576000816000905550600101610aeb565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b3782610b0c565b9050919050565b610b4781610b2c565b8114610b5257600080fd5b50565b600081359050610b6481610b3e565b92915050565b600060208284031215610b8057610b7f610b07565b5b6000610b8e84828501610b55565b91505092915050565b6000819050919050565b610baa81610b97565b82525050565b6000602082019050610bc56000830184610ba1565b92915050565b610bd481610b2c565b82525050565b6000602082019050610bef6000830184610bcb565b92915050565b6000819050919050565b6000610c1a610c15610c1084610b0c565b610bf5565b610b0c565b9050919050565b6000610c2c82610bff565b9050919050565b6000610c3e82610c21565b9050919050565b610c4e81610c33565b82525050565b6000602082019050610c696000830184610c45565b92915050565b610c7881610b97565b8114610c8357600080fd5b50565b600081359050610c9581610c6f565b92915050565b600060208284031215610cb157610cb0610b07565b5b6000610cbf84828501610c86565b91505092915050565b600081519050610cd781610c6f565b92915050565b600060208284031215610cf357610cf2610b07565b5b6000610d0184828501610cc8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d7382610b97565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610da657610da5610d39565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610dfb600083610de0565b9150610e0682610deb565b600082019050919050565b6000610e1c82610dee565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e6d600b83610e26565b9150610e7882610e37565b602082019050919050565b60006020820190508181036000830152610e9c81610e60565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610ed9601b83610e26565b9150610ee482610ea3565b602082019050919050565b60006020820190508181036000830152610f0881610ecc565b9050919050565b6000610f1a82610b97565b9150610f2583610b97565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f5a57610f59610d39565b5b828201905092915050565b6000610f7082610b97565b9150610f7b83610b97565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610fb457610fb3610d39565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ff982610b97565b915061100483610b97565b92508261101457611013610fbf565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61103e8161101f565b811461104957600080fd5b50565b60008151905061105b81611035565b92915050565b6000819050919050565b61107481611061565b811461107f57600080fd5b50565b6000815190506110918161106b565b92915050565b600080600080600060a086880312156110b3576110b2610b07565b5b60006110c18882890161104c565b95505060206110d288828901611082565b94505060406110e388828901610cc8565b93505060606110f488828901610cc8565b92505060806111058882890161104c565b9150509295509295909350565b600061111d82611061565b915061112883611061565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561116757611166610d39565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156111a4576111a3610d39565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111e1576111e0610d39565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561121e5761121d610d39565b5b82820290509291505056fea2646970667358221220dd17518b96d8446288ac911b533d902cdcbb19755636795d87f0f32e73a744d264736f6c63430008080033",
  "deployedBytecode": "0x6080604052600436106100865760003560e01c8063893d20e811610059578063893d20e8146101355780639e87a5cd14610160578063b60d42881461018b578063be2693f014610195578063d7b4750c146101ac57610086565b80630343fb251461008b5780630d8e6e2c146100c85780633ccfd60b146100f35780636b69a5921461010a575b600080fd5b34801561009757600080fd5b506100b260048036038101906100ad9190610b6a565b6101e9565b6040516100bf9190610bb0565b60405180910390f35b3480156100d457600080fd5b506100dd610231565b6040516100ea9190610bb0565b60405180910390f35b3480156100ff57600080fd5b506101086102d8565b005b34801561011657600080fd5b5061011f610518565b60405161012c9190610bb0565b60405180910390f35b34801561014157600080fd5b5061014a610525565b6040516101579190610bda565b60405180910390f35b34801561016c57600080fd5b5061017561054d565b6040516101829190610c54565b60405180910390f35b610193610577565b005b3480156101a157600080fd5b506101aa6106ae565b005b3480156101b857600080fd5b506101d360048036038101906101ce9190610c9b565b61093c565b6040516101e09190610bda565b60405180910390f35b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166354fd4d506040518163ffffffff1660e01b815260040160206040518083038186803b15801561029b57600080fd5b505afa1580156102af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102d39190610cdd565b905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461035d576040517fe1bbc6ae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6001805490508110156104085760006001828154811061038357610382610d0a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061040090610d68565b915050610360565b50600067ffffffffffffffff81111561042457610423610db1565b5b6040519080825280602002602001820160405280156104525781602001602082028036833780820191505090505b5060019080519060200190610468929190610a60565b5060003373ffffffffffffffffffffffffffffffffffffffff164760405161048f90610e11565b60006040518083038185875af1925050503d80600081146104cc576040519150601f19603f3d011682016040523d82523d6000602084013e6104d1565b606091505b5050905080610515576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050c90610e83565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60006105a534600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610984565b90506802b5e3af16b18800008110156105f3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105ea90610eef565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008282546106419190610f0f565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610733576040517fe1bbc6ae00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156107b757602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001906001019080831161076d575b5050505050905060005b81518110156108415760008282815181106107df576107de610d0a565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061083990610d68565b9150506107c1565b50600067ffffffffffffffff81111561085d5761085c610db1565b5b60405190808252806020026020018201604052801561088b5781602001602082028036833780820191505090505b50600190805190602001906108a1929190610a60565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16476040516108e890610e11565b60006040518083038185875af1925050503d8060008114610925576040519150601f19603f3d011682016040523d82523d6000602084013e61092a565b606091505b505090508061093857600080fd5b5050565b60006001828154811061095257610951610d0a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b600080610990836109c0565b90506000670de0b6b3a764000085836109a99190610f65565b6109b39190610fee565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b158015610a0957600080fd5b505afa158015610a1d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a419190611097565b5050509150506402540be40081610a589190611112565b915050919050565b828054828255906000526020600020908101928215610ad9579160200282015b82811115610ad85782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610a80565b5b509050610ae69190610aea565b5090565b5b80821115610b03576000816000905550600101610aeb565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b3782610b0c565b9050919050565b610b4781610b2c565b8114610b5257600080fd5b50565b600081359050610b6481610b3e565b92915050565b600060208284031215610b8057610b7f610b07565b5b6000610b8e84828501610b55565b91505092915050565b6000819050919050565b610baa81610b97565b82525050565b6000602082019050610bc56000830184610ba1565b92915050565b610bd481610b2c565b82525050565b6000602082019050610bef6000830184610bcb565b92915050565b6000819050919050565b6000610c1a610c15610c1084610b0c565b610bf5565b610b0c565b9050919050565b6000610c2c82610bff565b9050919050565b6000610c3e82610c21565b9050919050565b610c4e81610c33565b82525050565b6000602082019050610c696000830184610c45565b92915050565b610c7881610b97565b8114610c8357600080fd5b50565b600081359050610c9581610c6f565b92915050565b600060208284031215610cb157610cb0610b07565b5b6000610cbf84828501610c86565b91505092915050565b600081519050610cd781610c6f565b92915050565b600060208284031215610cf357610cf2610b07565b5b6000610d0184828501610cc8565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610d7382610b97565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff821415610da657610da5610d39565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610dfb600083610de0565b9150610e0682610deb565b600082019050919050565b6000610e1c82610dee565b9150819050919050565b600082825260208201905092915050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610e6d600b83610e26565b9150610e7882610e37565b602082019050919050565b60006020820190508181036000830152610e9c81610e60565b9050919050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610ed9601b83610e26565b9150610ee482610ea3565b602082019050919050565b60006020820190508181036000830152610f0881610ecc565b9050919050565b6000610f1a82610b97565b9150610f2583610b97565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610f5a57610f59610d39565b5b828201905092915050565b6000610f7082610b97565b9150610f7b83610b97565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610fb457610fb3610d39565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610ff982610b97565b915061100483610b97565b92508261101457611013610fbf565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b61103e8161101f565b811461104957600080fd5b50565b60008151905061105b81611035565b92915050565b6000819050919050565b61107481611061565b811461107f57600080fd5b50565b6000815190506110918161106b565b92915050565b600080600080600060a086880312156110b3576110b2610b07565b5b60006110c18882890161104c565b95505060206110d288828901611082565b94505060406110e388828901610cc8565b93505060606110f488828901610cc8565b92505060806111058882890161104c565b9150509295509295909350565b600061111d82611061565b915061112883611061565b9250827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211600084136000841316161561116757611166610d39565b5b817f800000000000000000000000000000000000000000000000000000000000000005831260008412600084131616156111a4576111a3610d39565b5b827f800000000000000000000000000000000000000000000000000000000000000005821260008413600084121616156111e1576111e0610d39565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff058212600084126000841216161561121e5761121d610d39565b5b82820290509291505056fea2646970667358221220dd17518b96d8446288ac911b533d902cdcbb19755636795d87f0f32e73a744d264736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 58,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 61,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 73,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}